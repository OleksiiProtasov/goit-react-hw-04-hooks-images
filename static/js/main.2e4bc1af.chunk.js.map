{"version":3,"sources":["Component/ImageGalleryItem/style.module.css","Component/Modal/style.module.css","Component/Container/style.module.css","Component/ImageGallery/style.Module.css","Component/Button/style.module.css","Component/Searchbar/style.module.css","Component/Searchbar/Searchbar.js","Component/Container/Container.js","Component/ImageGalleryItem/ImageGalleryItem.js","Component/ImageGallery/ImageGallery.js","Component/Button/Button.js","Servise/FetchImage.js","Component/Modal/Modal.js","Component/Loader/loader.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","onSubmitBar","useState","query","setQuery","className","style","SearchForm","onSubmit","e","preventDefault","alert","type","button","buttonLabel","input","autoComplete","autoFocus","placeholder","onChange","target","value","toLowerCase","Container","children","ImageGalleryItem","webformatURL","largeImageURL","src","alt","ImageGalleryItem__image","ImageGallery","image","onClick","map","id","Button","axios","defaults","baseURL","searchQuery","currentPage","get","then","response","data","hits","modalRoot","document","getElementById","Modal","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","ImageLoader","color","height","width","App","page","setPage","setImage","currentImg","setCurrentImg","isLoading","setIsLoading","showModal","setShowModal","a","isLoadingToggle","Api","pic","prevState","finally","fetchPics","scrollPageBtn","setTimeout","scrollBy","top","documentElement","scrollHeight","behavior","handleImageClick","nodeName","dataset","img","toggleModal","showMoreBtn","onLoad","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2e4bc1af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"style_ImageGalleryItem__3i0z7\",\"ImageGalleryItem__image\":\"style_ImageGalleryItem__image__310RU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"style_Overlay__1bIVM\",\"Modal\":\"style_Modal__3laow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__eW3kb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"_3uFWR0we6TRfIWgMbFoCj7\",\"ImageGalleryItem\":\"_3e-ozFJV6B5zdwkf8qVLQI\",\"ImageGalleryItem__image\":\"q9jn5lCaSwaMZMyfYxBrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"style_Button__3CxS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"style_Searchbar__1vFi_\",\"SearchForm\":\"style_SearchForm__2AbR2\",\"button\":\"style_button__3wLNX\",\"buttonLabel\":\"style_buttonLabel__1jlPT\",\"input\":\"style_input__1VW7B\"};","// import React, { Component } from \"react\";\r\nimport {useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./style.module.css\";\r\n\r\nexport default function Searchbar({ onSubmitBar }) {\r\n  const [query, setQuery] = useState('');\r\n  \r\n  const handleInputChange = e => {\r\n    setQuery(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    if(query === \"\") { \r\n      alert(\"enter name image what you want\")\r\n      return;\r\n    }\r\n\r\n    onSubmitBar(query);\r\n    setQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={style.Searchbar}>\r\n      <form className={style.SearchForm} onSubmit={handleFormSubmit}>\r\n        <button type=\"submit\" className={style.button}>\r\n          <span className={style.buttonLabel}>Search</span>\r\n        </button>\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"𝚂𝚎𝚊𝚛𝚌𝚑 𝚒𝚖𝚊𝚐𝚎𝚜 \"\r\n          onChange={handleInputChange}\r\n          value={query}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmitBar: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     query: \"\",\r\n//   };\r\n\r\n//   handleInputChange = (e) => {\r\n//     const { value } = e.target;\r\n//     this.setState({ query: value });\r\n//   };\r\n\r\n//   handleFormSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.onSubmit(this.state);\r\n//   };\r\n\r\n//   handleClearSearchbar = () => {\r\n//     this.setState({ query: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     const { query } = this.state;\r\n//     return (\r\n//       <header className={style.Searchbar}>\r\n//         <form className={style.SearchForm} onSubmit={this.handleFormSubmit}>\r\n//           <button type=\"submit\" className={style.button}>\r\n//             <span className={style.buttonLabel}>Search</span>\r\n//           </button>\r\n//           <input\r\n//             className={style.input}\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             // eslint-disable-next-line\r\n//             autoFocus\r\n//             placeholder=\"𝚂𝚎𝚊𝚛𝚌𝚑 𝚒𝚖𝚊𝚐𝚎𝚜 \"\r\n//             onChange={this.handleInputChange}\r\n//             onClick={this.handleClearSearchbar}\r\n//             value={query}\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// Searchbar.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./style.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport style from \"./style.module.css\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL,  largeImageURL }) => (\r\n  <li className={style.ImageGalleryItem}>\r\n    <img\r\n      src={webformatURL}\r\n      alt=\"\"\r\n      data-img={largeImageURL}\r\n      className={style.ImageGalleryItem__image}\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport style from \"./style.Module.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ image, onClick }) => (\r\n  <ul className={style.ImageGallery} onClick={onClick}>\r\n    \r\n    {image.map(({ id, webformatURL,  largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        largeImageURL={largeImageURL}\r\n      />\r\n    ))}\r\n    \r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./style.module.css\";\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" onClick={onClick} className={style.Button}>\r\n    load more...\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\n\r\nconst KEY = \"21935318-c1f2aed7e7c83eceedbf4cf2c\";\r\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\r\n\r\nconst findImage = (searchQuery, currentPage) =>\r\n  axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n\r\n// eslint-disable-next-line\r\nexport default { findImage };\r\n","// import React, { Component } from \"react\";\r\nimport {useEffect} from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { createPortal } from \"react-dom\";\r\nimport style from \"./style.module.css\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nexport default function Modal({onClose , children}) {\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    }\r\n  }, [onClose]);\r\n    \r\n    return createPortal(\r\n      \r\n      <div className={style.Overlay} onClick={onClose}>\r\n        <div className={style.Modal}>{children}</div>\r\n      </div>,\r\n      modalRoot\r\n    ); \r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\n// export default class Modal extends Component {\r\n//   componentDidMount() {\r\n//     // eslint-disable-next-line\r\n//     window.addEventListener(\"keydown\", this.closeModalEsc);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     // eslint-disable-next-line\r\n//     window.removeEventListener(\"keydown\", this.closeModalEsc);\r\n//   }\r\n\r\n//   closeModalEsc = (e) => {\r\n//     if (e.code === \"Escape\") {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   handleBackdropClick = (e) => {\r\n//     if (e.target === e.currentTarget) {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return createPortal(\r\n//       // eslint-disable-next-line\r\n//       <div className={style.Overlay} onClick={this.handleBackdropClick}>\r\n//         <div className={style.Modal}>{this.props.children}</div>\r\n//       </div>,\r\n//       modalRoot\r\n//     );\r\n//   }\r\n// }\r\n\r\n// Modal.propTypes = {\r\n//   children: PropTypes.node.isRequired,\r\n//   onClose: PropTypes.func.isRequired,\r\n// };\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst ImageLoader = () => (\r\n  <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n);\r\n\r\nexport default ImageLoader;\r\n","// import React, { Component } from \"react\";\r\n// eslint-disable-next-line\r\nimport {useState, useEffect} from 'react'\r\nimport SearchBar from \"./Component/Searchbar\";\r\nimport Container from \"./Component/Container\";\r\nimport ImageGallery from \"./Component/ImageGallery\";\r\nimport Button from \"./Component/Button/Button\";\r\nimport Api from \"./Servise/FetchImage\";\r\nimport Modal from \"./Component/Modal\";\r\nimport ImageLoader from \"./Component/Loader\";\r\n\r\n// import style from \"./style.css\";\r\n\r\nexport default function App() {\r\n      \r\nconst [page, setPage] = useState(1)\r\nconst [query, setQuery] = useState('')\r\nconst [image, setImage] = useState([])\r\nconst [currentImg, setCurrentImg] = useState([])\r\nconst [isLoading, setIsLoading] = useState(false)\r\nconst [showModal, setShowModal] = useState(false)\r\n      \r\n  useEffect(() => {\r\n      if (query === '') {\r\n        return \r\n      };\r\n      const fetchPics = async () => {\r\n        isLoadingToggle();\r\n\r\n      return Api.findImage(query,page )\r\n      .then((pic) => setImage((prevState) => [...prevState, ...pic]))\r\n      .finally(() => isLoadingToggle());\r\n    };\r\n    fetchPics();\r\n  }, [query, page]); \r\n\r\n  const loadMoreBtn = () => {\r\n    setPage((prevState) => prevState + 1);\r\n    if(query) {\r\n      isLoadingToggle();\r\n      scrollPageBtn();\r\n      isLoadingToggle();\r\n    }\r\n  }\r\n\r\n  const scrollPageBtn = () => {\r\n    setTimeout(() => {\r\n       window.scrollBy({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n    },400);\r\n  } \r\n\r\n  const handleFormData = ( searchQuery ) => {\r\n    setQuery(searchQuery);\r\n    setPage(1);\r\n    setImage([])\r\n    \r\n  };\r\n\r\n  const handleImageClick = ( e ) => {\r\n    if (e.target.nodeName !== \"IMG\") {\r\n      return;\r\n    }\r\n    setCurrentImg(e.target.dataset.img);\r\n\r\n    toggleModal();\r\n  };\r\n \r\n  const isLoadingToggle = () => {\r\n  setIsLoading((prevState) => !prevState);}\r\n\r\n  const toggleModal = () => {\r\n   setShowModal((prevState) => !prevState )};\r\n\r\n  const hideLoaderInModal = () => setShowModal({ isLoading: false });\r\n\r\n  const showMoreBtn = isLoading && !showModal;\r\n\r\n  return (\r\n    <Container>\r\n      {showModal && (\r\n        <Modal onClose={toggleModal} onClick={handleImageClick}>\r\n          {isLoading && <ImageLoader />}\r\n          <img src={currentImg} alt=\"Images\"  onLoad={hideLoaderInModal} />\r\n        </Modal>\r\n      )}\r\n      <SearchBar onSubmitBar={handleFormData} />\r\n\r\n      <ImageGallery image={image} onClick={handleImageClick} />\r\n      {showMoreBtn && image.length !== 0 && <ImageLoader />}\r\n      {!isLoading && image[0] && (\r\n        <Button onClick={loadMoreBtn} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     page: 1,\r\n//     query: \"\",\r\n//     images: [],\r\n//     isLoading: false,\r\n//     showModal: false,\r\n//     url: \"\",\r\n//     tag: \"\",\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const { query } = this.state;\r\n//     if (query !== prevState.query) {\r\n//       this.fetchImages()\r\n//         // eslint-disable-next-line\r\n//         .catch((error) => this.setState({ error }))\r\n//         .finally(() => this.setState({ isLoading: false }));\r\n//     }\r\n//   }\r\n\r\n//   fetchImages = () => {\r\n//     const { query, page } = this.state;\r\n//     this.setState({ isLoading: true });\r\n//     return api.findImage(query, page).then((images) => {\r\n//       this.setState((prevState) => ({\r\n//         images: [...prevState.images, ...images],\r\n//         page: prevState.page + 1,\r\n//       }));\r\n//     });\r\n//   };\r\n\r\n//   handleOnButtonClick = () => {\r\n//     this.fetchImages()\r\n//       .then(() =>\r\n//         // eslint-disable-next-line\r\n//         window.scrollTo({\r\n//           // eslint-disable-next-line\r\n//           top: document.documentElement.scrollHeight,\r\n//           behavior: \"smooth\",\r\n//         })\r\n//       )\r\n//       .catch((error) => alert(error))\r\n//       .finally(() => this.setState({ isLoading: false }));\r\n//   };\r\n\r\n//   handleFormData = ( query ) => {\r\n//     this.setState({\r\n//       page: 1,\r\n//       query,\r\n//       images: [],\r\n//     });\r\n//   };\r\n\r\n//   handleImageClick = ({ target }) => {\r\n//     if (target.nodeName !== \"IMG\") {\r\n//       return;\r\n//     }\r\n//     const { url } = target.dataset;\r\n//     const tag = target.alt;\r\n//     this.setState({\r\n//       url,\r\n//       tag,\r\n//       isLoading: true,\r\n//     });\r\n//     this.toggleModal();\r\n//   };\r\n\r\n//   toggleModal = () =>\r\n//     this.setState((prevState) => ({ showModal: !prevState.showModal }));\r\n\r\n//   hideLoaderInModal = () => this.setState({ isLoading: false });\r\n\r\n//   render() {\r\n//     const { images, isLoading, showModal, url, tag } = this.state;\r\n\r\n//     const showMoreBtn = isLoading && !showModal;\r\n//     return (\r\n//       <Container>\r\n//         {showModal && (\r\n//           <Modal onClose={this.toggleModal} onClick={this.handleImageClick}>\r\n//             {isLoading && <ImageLoader />}\r\n//             <img src={url} alt={tag} onLoad={this.hideLoaderInModal} />\r\n//           </Modal>\r\n//         )}\r\n//         <SearchBar onSubmitBar={this.handleFormData} />\r\n\r\n//         <ImageGallery images={images} onClick={this.handleImageClick} />\r\n//         {showMoreBtn && images.length !== 0 && <ImageLoader />}\r\n//         {!isLoading && images[0] && (\r\n//           <Button onClick={this.handleOnButtonClick} />\r\n//         )}\r\n//       </Container>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}